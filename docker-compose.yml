services:
  backend:
    build: ./backend
    container_name: schedulink-backend
    expose:
      - "8000"
    volumes:
      - ./backend:/app
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 10 &&
        echo 'Initializing database...' &&
        python /app/init_db.py &&
        echo 'Starting backend server...' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "
    environment:
      - LOAD_BALANCER_DNS=${LOAD_BALANCER_DNS:-localhost}
      - DATABASE_URL=postgresql://schedulink_user:${DB_PASSWORD:-SecurePass123}@db:5432/schedulink_db
    depends_on:
      - db

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        VITE_API_URL: ${VITE_API_URL:-/api}
    container_name: schedulink-frontend
    expose:
      - "3000"  # Don't expose directly, use nginx
    environment:
      - VITE_API_URL=${VITE_API_URL:-/api}

  # Database
  db:
    image: postgres:15
    container_name: schedulink-db
    environment:
      - POSTGRES_DB=schedulink_db
      - POSTGRES_USER=schedulink_user
      - POSTGRES_PASSWORD=${DB_PASSWORD:-SecurePass123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4
    container_name: schedulink-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@schedulink.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
    ports:
      - "8080:80"
    depends_on:
      - db
    restart: unless-stopped

  # Nginx reverse proxy for load balancer
  nginx:
    image: nginx:alpine
    container_name: schedulink-nginx
    ports:
      - "8081:80" # This maps host port 8081 to container port 80
    volumes:
      - ./nginx-prod.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
